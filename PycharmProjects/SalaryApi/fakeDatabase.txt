from flask import Flask
from flask import render_template
from flask import request
from datetime import datetime

from calculate_api.utilities import calculator

app = Flask(__name__)


@app.route('/hello_world')
def hello_world():
    return "<b>Hello, Tribe</b>"


@app.route('/')
def candidate_form():
    return render_template("index.html")


@app.route('/calculate_salary', methods=["POST"])
def calculate_salary():
    if request.method == "POST":
        profession = request.form['profession']
        number_of_exp_yrs = int(request.form['experience'])

        langs = request.form['languages']
        usr_coding_langs = langs.split(",")

        design_tools = request.form['designTools']
        sw_pkgs = design_tools.split(",")

        dob_input = request.form['dob']
        # Converts a string into a datetime object output: yyyy/mm/dd
        dob_obj = datetime.strptime(dob_input, "%m/%d/%Y")

        # Formats the new datetime object to output: mm/dd/yyyy
        date_ftmd = dob_obj.strftime("%m/%d/%Y")

        full_name = request.form['fullName']

        age = int(request.form['age'])
        country = request.form['country']
        state = request.form['state']
        number_of_edu_yrs = int(request.form['educationYears'])

        is_developer = False
        is_designer = False
        if int(profession) == 1:
            is_developer = True
        else:
            is_designer = True

        usr_info = {
            "dob": date_ftmd, "full_name": full_name, "country": country,
            "state": state, "is_active": True, "number_of_education_years": number_of_edu_yrs,
            "age": age
        }

        calculated_result = calculator.calculate_expected_salary(number_of_exp_yrs, usr_info, number_of_edu_yrs,
                                             is_developer, is_designer, usr_coding_langs, sw_pkgs)

        # The newline characters only respond in python print(), so when I
        # return my result that is run through flask I replace it with an html line break
        calculated_result = calculated_result.replace('\n', '<br>')

        return render_template("result.html", message=calculated_result)

    else:  # if GET request was attempted
        return "Please submit a POST request"
This is my extra text.